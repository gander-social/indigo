# Mock HSM Service Configuration
# Educational Note: This simulates a Hardware Security Module (HSM) for development
# In production, this would be replaced with actual HSM hardware or cloud HSM service
# HSMs provide secure key storage and cryptographic operations that cannot be extracted

server {
    listen 80;
    server_name localhost;

    # Health check endpoint
    location /health {
        return 200 '{"status":"healthy","service":"mock-hsm","mode":"development"}';
        add_header Content-Type application/json;
    }

    # Key generation endpoint
    # Educational Note: In real HSMs, keys are generated inside the secure hardware
    # and never leave the device in plaintext
    location /api/v1/keys/generate {
        return 200 '{"key_id":"mock-key-$request_time","algorithm":"ES256K","created":"$time_iso8601","jurisdiction":"CA"}';
        add_header Content-Type application/json;
    }

    # Key signing endpoint
    # Educational Note: This is where cryptographic signatures are created
    # The private key never leaves the HSM, only the signature is returned
    location /api/v1/keys/sign {
        return 200 '{"signature":"mock-signature-$request_time","algorithm":"ES256K","signed_at":"$time_iso8601"}';
        add_header Content-Type application/json;
    }

    # Key verification endpoint
    # Educational Note: Public key operations can be performed outside the HSM
    # but this endpoint simulates verification for consistency
    location /api/v1/keys/verify {
        return 200 '{"valid":true,"verified_at":"$time_iso8601","trust_level":"high"}';
        add_header Content-Type application/json;
    }

    # Key rotation endpoint
    # Educational Note: Regular key rotation is crucial for security
    # HSMs can automate this process while maintaining service availability
    location /api/v1/keys/rotate {
        return 200 '{"old_key_id":"mock-key-old","new_key_id":"mock-key-new-$request_time","rotated_at":"$time_iso8601"}';
        add_header Content-Type application/json;
    }

    # Canadian compliance endpoint
    # Educational Note: This simulates compliance-specific operations
    # that might be required for Canadian data sovereignty
    location /api/v1/compliance/canada {
        return 200 '{"jurisdiction":"CA","compliance_level":"PIPEDA","encryption":"AES-256-GCM","key_escrow":"enabled","audit_trail":"enabled"}';
        add_header Content-Type application/json;
    }

    # Audit log endpoint
    # Educational Note: HSMs maintain tamper-evident audit logs
    # These are crucial for compliance and security monitoring
    location /api/v1/audit {
        return 200 '{"audit_enabled":true,"last_entry":"$time_iso8601","entries_count":42,"jurisdiction":"CA"}';
        add_header Content-Type application/json;
    }

    # Error handling for unknown endpoints
    location / {
        return 404 '{"error":"endpoint_not_found","message":"Mock HSM endpoint not implemented","available_endpoints":["/health","/api/v1/keys/*","/api/v1/compliance/canada","/api/v1/audit"]}';
        add_header Content-Type application/json;
    }

    # Security headers for all responses
    # Educational Note: These headers help protect against various web vulnerabilities
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    add_header X-HSM-Mode "development-mock";
    add_header X-Jurisdiction "CA";
}
